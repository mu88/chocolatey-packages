name: Choco Auto Update

on:
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:
  update_choco_auto:
    name: update_${{ matrix.package }}
    runs-on: windows-latest

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    strategy:
      max-parallel: 1
      matrix:
        package: [
          foldersync-desktop
        ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4

      - name: Configure GitHub Packages as NuGet source
        run: dotnet nuget add source --username mu88 --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github 'https://nuget.pkg.github.com/mu88/index.json'

      - name: Install Chocolatey Automatic Package Updater Module
        run: Install-Module -Name Chocolatey-AU -Force

      - name: Run ${{ matrix.package }} update script
        id: update
        run: |
          Set-Location _auto\${{ matrix.package }}
          $UpdateOutput = .\update.ps1
          $NupkgPath = (($UpdateOutput.Result | Where-Object {$_ -like '*.nupkg''*'}) -split "'")[1]
          $NewVersion = $UpdateOutput.RemoteVersion
          Write-Output "NupkgPath=$($NupkgPath)" >> $Env:GITHUB_OUTPUT
          Write-Output "NewVersion=$($NewVersion)" >> $Env:GITHUB_OUTPUT
          $UpdateStatus = if ($UpdateOutput.Result -match 'No new version found') {'No Update'} else {'Update Available'}
          Write-Output "UpdateStatus=$($UpdateStatus)" >> $Env:GITHUB_OUTPUT

      - name: Test ${{ matrix.package }} install
        if: ${{ false && steps.update.outputs.UpdateStatus == 'Update Available' }} # Skip for now as it is not yet clear how appx packages can be installed
        run: Test-Package -Install -Nu ${{ steps.update.outputs.NupkgPath }}

      - name: Publish ${{ matrix.package }} to GitHub Packages feed
        if: steps.update.outputs.UpdateStatus == 'Update Available'
        run: |
          Set-Location _auto\${{ matrix.package }}
          $Nupkg = '${{ steps.update.outputs.NupkgPath }}'
          $ApiKey = '${{ secrets.GITHUB_TOKEN }}'
          dotnet nuget push $Nupkg --api-key $ApiKey --source 'github'
  
      - name: Publish ${{ matrix.package }} to Chocolatey community feed
        if: ${{ false }}
        run: |
          Set-Location _auto\${{ matrix.package }}
          $Nupkg = '${{ steps.update.outputs.NupkgPath }}'
          $ApiKey = '${{ secrets.CHOCO_KEY }}'
          $ChocoServer = 'https://push.chocolatey.org/'
          choco push $Nupkg --source $ChocoServer --key $ApiKey

      - name: Commit Updated nuspec
        uses: stefanzweifel/git-auto-commit-action@v4
        if: steps.update.outputs.UpdateStatus == 'Update Available'
        with:
          commit_message: "feat(${{ matrix.package }}): upgrade to v${{ steps.update.outputs.NewVersion }}"
          file_pattern: '*.nuspec *.ps1'
